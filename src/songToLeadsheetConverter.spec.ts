import { parse } from './songParser.js';
import {
  convertSongToLeadsheet,
  getNormalizedContent,
} from './songToLeadsheetConverter.js';

describe('songToLeadsheetConverter', () => {
  it('should correctly convert to a leadsheet song', () => {
    const parsedSong = parse(`[title]
Cântă, suflet al meu, pentru Dumnezeu {alternative: {alternative 1 & alternative 2}, composer: {Matt Redman}, writer: {*}, arranger: {*}, interpreter: {Alin Timofte}, band: {*}, key: {*}, tempo: {*}, tags: {*}, version: {*}, genre: {*}, rcId: {164159}, id: {abCwAsZpAWGVzGNBWEfyhB}, contentHash: {1befcd}}

[sequence]
c,v1,c,v2,c,v3,c

[c]
^{D}Cântă, ^{G}suflet al ^{D}meu,
^{A}pentru Dumne^{Bm}zeu, ^{G}Cel bine^{D}cuvân^{A4-A}tat!
Al Lui ^{G}Nume e ^{Bm}sfânt, ^{G}cân^{A}ta-a^{Bm}cum,
Cum ^{G}nu ai ^{A}mai cân^{Dsus-D}tat.

[v1]
E o ^{G}nouă ^{D}zi, soare^{A}le ră^{Bm}sare,
^{G}E timp să ^{D}cânt spre ^{A}slava ^{Bm}Ta.
Orice-^{G}ar ve^{D}ni, orice-n ^{A}față mi-ar a^{Bm}pare
^{G}Eu vreau să ^{D}cânt și seara ^{A6}la^{A}u^{D}de.

[v2]
Încet Tu ești, Doamne, la mânie,
În dragoste ești bogat și ești bun.
Găsesc că am zece mii motive
Ca să Te laud și tuturor să spun:

[v3]
Iar când sfârșitul îmi va fi aproape,
Puterile când îmi vor slăbi,
Al meu suflet va cânta continuu
Ori zece mii de ani și-n veșnicii.
`);

    expect(parsedSong).toMatchInlineSnapshot(`
{
  "alternative": "alternative 1 & alternative 2",
  "arranger": "*",
  "band": "*",
  "composer": "Matt Redman",
  "contentHash": "1befcd",
  "genre": "*",
  "id": "abCwAsZpAWGVzGNBWEfyhB",
  "interpreter": "Alin Timofte",
  "key": "*",
  "rcId": "164159",
  "sectionOrder": [
    "[c]",
    "[v1]",
    "[v2]",
    "[v3]",
  ],
  "sectionsMap": {
    "[c]": {
      "content": "^{D}Cântă, ^{G}suflet al ^{D}meu,
^{A}pentru Dumne^{Bm}zeu, ^{G}Cel bine^{D}cuvân^{A4-A}tat!
Al Lui ^{G}Nume e ^{Bm}sfânt, ^{G}cân^{A}ta-a^{Bm}cum,
Cum ^{G}nu ai ^{A}mai cân^{Dsus-D}tat.",
      "sectionIdentifier": "[c]",
      "sectionSequenceType": "c",
    },
    "[sequence]": {
      "content": "c,v1,c,v2,c,v3,c",
      "sectionIdentifier": "[sequence]",
      "sectionSequenceType": "s",
    },
    "[title]": {
      "content": "Cântă, suflet al meu, pentru Dumnezeu {alternative: {alternative 1 & alternative 2}, composer: {Matt Redman}, writer: {*}, arranger: {*}, interpreter: {Alin Timofte}, band: {*}, key: {*}, tempo: {*}, tags: {*}, version: {*}, genre: {*}, rcId: {164159}, id: {abCwAsZpAWGVzGNBWEfyhB}, contentHash: {1befcd}}",
      "sectionIdentifier": "[title]",
      "sectionSequenceType": "",
    },
    "[v1]": {
      "content": "E o ^{G}nouă ^{D}zi, soare^{A}le ră^{Bm}sare,
^{G}E timp să ^{D}cânt spre ^{A}slava ^{Bm}Ta.
Orice-^{G}ar ve^{D}ni, orice-n ^{A}față mi-ar a^{Bm}pare
^{G}Eu vreau să ^{D}cânt și seara ^{A6}la^{A}u^{D}de.",
      "sectionIdentifier": "[v1]",
      "sectionSequenceType": "v",
    },
    "[v2]": {
      "content": "Încet Tu ești, Doamne, la mânie,
În dragoste ești bogat și ești bun.
Găsesc că am zece mii motive
Ca să Te laud și tuturor să spun:",
      "sectionIdentifier": "[v2]",
      "sectionSequenceType": "v",
    },
    "[v3]": {
      "content": "Iar când sfârșitul îmi va fi aproape,
Puterile când îmi vor slăbi,
Al meu suflet va cânta continuu
Ori zece mii de ani și-n veșnicii.",
      "sectionIdentifier": "[v3]",
      "sectionSequenceType": "v",
    },
  },
  "sequence": [
    "c",
    "v1",
    "c",
    "v2",
    "c",
    "v3",
    "c",
  ],
  "tags": "*",
  "tempo": "*",
  "title": "Cântă, suflet al meu, pentru Dumnezeu",
  "version": "*",
  "writer": "*",
}
`);

    expect(convertSongToLeadsheet(parsedSong)).toMatchInlineSnapshot(`
"% =====================================================================
% This file is auto-generated.
%
% Copyright (c) 2024 Ioan Lucuț (ioan.lucut88@gmail.com)
%
% Do not edit this file directly. Any changes made will be overwritten
% the next time the file is generated.
% =====================================================================

% This is the only preamble definition required
\\documentclass{leadsheet}
\\begin{document}

  %  https://tex.stackexchange.com/questions/9852/what-is-the-difference-between-page-break-and-new-page
  %  Every song should start in a new page.
  \\newpage

  \\begin{song}{
     title={Cântă, suflet al meu, pentru Dumnezeu},
     subtitle={c,v1,c,v2,c,v3,c},
     composer={Matt Redman},
     interpret={Alin Timofte}
  }

  \\begin{chorus}[template = framed]
    ^{D}Cântă, ^{G}suflet al ^{D}meu, \\\\
    ^{A}pentru Dumne^{Bm}zeu, ^{G}Cel bine^{D}cuvân^{A4-A}tat! \\\\
    Al Lui ^{G}Nume e ^{Bm}sfânt, ^*{G}cân ^*{A}ta-a ^{Bm}cum, \\\\
    Cum ^{G}nu ai ^{A}mai cân^{Dsus-D}tat.
  \\end{chorus}

  \\begin{verse}
    E o ^{G}nouă ^{D}zi, soare^{A}le ră^{Bm}sare, \\\\
    ^{G}E timp să ^{D}cânt spre ^{A}slava ^{Bm}Ta. \\\\
    Orice-^{G}ar ve^{D}ni, orice-n ^{A}față mi-ar a^{Bm}pare \\\\
    ^{G}Eu vreau să ^{D}cânt și seara ^*{A6}la ^*{A}u ^{D}de.
  \\end{verse}

  \\begin{verse}
    Încet Tu ești, Doamne, la mânie, \\\\
    În dragoste ești bogat și ești bun. \\\\
    Găsesc că am zece mii motive \\\\
    Ca să Te laud și tuturor să spun:
  \\end{verse}

  \\begin{verse}
    Iar când sfârșitul îmi va fi aproape, \\\\
    Puterile când îmi vor slăbi, \\\\
    Al meu suflet va cânta continuu \\\\
    Ori zece mii de ani și-n veșnicii.
  \\end{verse}

  \\end{song}
\\end{document}"
`);
  });

  describe('getNormalizedContent', () => {
    it('should ignore single words that do not have more than one chord section within', () => {
      expect(getNormalizedContent('^{G4}this')).toEqual('^{G4}this');
    });

    it('should ignore multiple words that do not have more than one chord section within', () => {
      expect(getNormalizedContent(`^{G4}this ^{G}that`)).toEqual(
        '^{G4}this ^{G}that',
      );
    });

    it('should normalise word that has more than one chord', () => {
      expect(getNormalizedContent('^{G4}th^{G}is')).toEqual('^*{G4}th ^{G}is');
    });

    it('should normalise word with more than three chord notations correctly', () => {
      expect(getNormalizedContent('^{G}Te-o^{D}no^{A}rez')).toEqual(
        '^*{G}Te-o ^*{D}no ^{A}rez',
      );
    });

    it('should normalise words that have more than one chord', () => {
      expect(getNormalizedContent('^{G4}th^{G}is ^{G4}th^{G}is')).toEqual(
        '^*{G4}th ^{G}is ^*{G4}th ^{G}is',
      );
    });

    it.skip('should normalise words that have more than one chord', () => {
      expect(getNormalizedContent('^{A}A^{D-G}min!')).toEqual(
        '^*{A} A^{D-G}min!',
      );
    });

    it('should normalise words with notations having bass (from / to -)', () => {
      expect(getNormalizedContent('^{Ab/C}th')).toEqual('^{Ab-C}th');
      expect(getNormalizedContent('^{D/F#}lumi^{G}nat')).toEqual(
        '^{D-F#}lumi^{G}nat',
      );
      expect(getNormalizedContent('/: th :/')).toEqual('/: th :/');
    });

    it('should normalise words with wrong chord notations (missing ^ before {)', () => {
      expect(getNormalizedContent('{G4}th{G}is {G4}th{G}is')).toEqual(
        '^*{G4}th ^{G}is ^*{G4}th ^{G}is',
      );
    });

    it('should normalise words with wrong chord notations (having space in {A C})', () => {
      expect(() => getNormalizedContent('^{A C}th')).toThrow();
    });
  });
});
