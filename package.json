{
  "name": "bes-lyrics",
  "version": "1.0.1",
  "author": "Ioan Lucuț <ioan.lucut88@gmail.com>",
  "license": "GNU GPLv3",
  "description": "Cântări creștine în limba română, corectate și adaptate.",
  "dependencies": {
    "@types/is-ci": "^3.0.4",
    "@types/nspell": "^2.1.6",
    "@types/string-similarity": "^4.0.2",
    "chalk": "^4.1.2",
    "crlf-normalize": "^1.0.19",
    "dictionary-ro": "^2.1.0",
    "dotenv": "^16.3.1",
    "fs-extra": "^11.1.1",
    "iconv": "^3.0.1",
    "is-ci": "^3.0.1",
    "lodash-es": "^4.17.21",
    "nspell": "^2.1.5",
    "p-map": "^4.0.0",
    "recursive-readdir": "^2.2.3",
    "short-uuid": "^4.2.2",
    "string-similarity": "^4.0.4"
  },
  "devDependencies": {
    "@tsconfig/node-lts": "^18.12.5",
    "@types/fs-extra": "^11.0.4",
    "@types/iconv": "^3.0.4",
    "@types/jest": "^29.5.8",
    "@types/lodash": "^4.14.201",
    "@types/lodash-es": "^4.17.11",
    "@types/node": "^20.9.2",
    "@types/recursive-readdir": "^2.2.4",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "eslint": "^8.54.0",
    "eslint-plugin-require-extensions": "^0.1.3",
    "is-ci-cli": "^2.2.0",
    "jest": "^29.7.0",
    "jest-runner-eslint": "^2.1.2",
    "jest-snapshot": "^29.7.0",
    "jest-watch-typeahead": "^2.2.2",
    "lodash": "^4.17.21",
    "prettier": "^3.1.0",
    "prettier-plugin-latex": "^2.0.1",
    "prettier-plugin-organize-imports": "^3.2.4",
    "prettier-plugin-packagejson": "^2.4.6",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tslib": "^2.6.2",
    "typescript": "5.1.6"
  },
  "type": "module",
  "scripts": {
    "format": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./node_modules/.bin/prettier --log-level error --write \"./verified/**/*.txt\" {src,bin,mocks,temp-runners}/**/*.ts README.md \"./LaTeX/**/*.tex\"",
    "test:ci": "NODE_ENV=test jest --runInBand --no-cache",
    "test:watch": "NODE_ENV=test TZ='Europe/Berlin' jest --watch --logHeapUsage --no-cache",
    "test": "is-ci-cli test:ci test:watch",
    "lint": "jest --config ./jest.config.lint.ts",
    "lint:watch": "npm run lint -- --watch",
    "lint:fix": "eslint --ext .ts --fix .",
    "verify": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsTextValidator.ts",
    "verify:file-extensions": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsFileExtensionValidator.ts",
    "verify:uniqueness-of-ids": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsIdUniquenessValidator.ts",
    "verify:similarity": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsSimilarityValidator.ts",
    "verify:similarity:mv": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsSimilarityValidator.ts --overwrite",
    "verify:similarity:rm": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsSimilarityValidator.ts --removeDuplicates",
    "dictionary:analyze": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsRomanianDictionaryAnalyzer.ts",
    "dictionary:update": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsRomanianDictionaryAnalyzer.ts --saveToDictionary",
    "reprocess:content": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsTextReprocessorRunner.ts",
    "reprocess:filename": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./bin/lyricsFileNameReprocessorRunner.ts",
    "import:rc:by-authors": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./temp-runners/importSongsFromRcByAuthors.ts",
    "import:rc:by-ids": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./temp-runners/importSongsFromRcByIds.ts",
    "import:rc:ci": "npm run import:rc:by-authors && npm run import:rc:by-ids && npm run reprocess:filename && npm run format",
    "build:ci": "npm run lint && npm run test && npm run verify:file-extensions && npm run verify:uniqueness-of-ids && npm run verify",
    "meta:ci": "npm run verify:file-extensions && npm run verify:uniqueness-of-ids && npm run reprocess:filename && npm run reprocess:content && npm run verify && npm run format"
  }
}
